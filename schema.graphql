# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input AuthInput {
  email: String!
  password: String!
}

type AuthResponseWeb {
  accessToken: String!
  user: User!
}

type Mutation {
  createWorkday(projectId: String!, input: WorkdayCreateInput!): Workday!
  updateWorkday(id: String!, input: WorkdayUpdateInput!): Workday!
  deleteWorkday(id: String!): Boolean!
  addScenesToWorkday(sceneIds: [String!]!, workdayId: String!): Workday!
  removeScenesFromWorkday(sceneIds: [String!]!, workdayId: String!): Boolean!
  createScene(input: SceneCreateInput!, workdayId: String, projectId: String!): Scene!
  deleteScene(id: String!): Boolean!

  """Create new project"""
  createProject(input: ProjectCreateInput!): Project!
  updateProject(input: ProjectUpdateInput!, id: String!): Project!
  deleteProject(id: String!): String!
  loginWeb(input: AuthInput!): AuthResponseWeb!
  registerWeb(input: AuthInput!): AuthResponseWeb!
  createRequisite(projectId: String!, input: RequisiteCreateInput!): Requisite!
  deleteRequisite(id: String!): Boolean!
}

type Project {
  id: ID!
  title: String!
  description: String
  startDay: String!
  endDay: String!
  ownerId: String!
  owner: User!
  workdays: [Workday!]!
  scenes: [Scene!]!
  requisites: [Requisite!]!
}

input ProjectCreateInput {
  title: String!
  startDay: String!
  endDay: String!
}

input ProjectUpdateInput {
  title: String
  startDay: String
  endDay: String
}

type Query {
  workdays(projectId: String!): [Workday!]!
  workday(id: String!): Workday!
  scenes(projectId: String!): [Scene!]!
  scene(id: String!): Scene!
  ownedProjects: [Project!]!
  me: User!
  users: [User!]!
  requisites(projectId: String!): [Requisite!]!
  requisite(id: String!): Requisite!
}

type Requisite {
  id: ID!
  title: String!
  description: String
  isOrdered: Boolean!
  pricePerDay: Int!
  projectId: String!
  project: Project!
  scenes: [Scene!]!
}

input RequisiteCreateInput {
  title: String!
  description: String
  isOrdered: Boolean = false
  pricePerDay: Int = 0
}

type Scene {
  id: ID!
  title: String
  location: String
  sceneNumber: Float!
  projectId: String!
  project: Project!
  workdays: [Workday!]!
  requisites: [Requisite!]!
}

input SceneCreateInput {
  title: String
  location: String
  sceneNumber: Int!
}

type User {
  id: ID!
  email: String!
  name: String
  phone: String
  projects: [Project!]!
}

type Workday {
  id: ID!
  title: String
  date: String!
  projectId: String!
  project: Project!
  scenes: [Scene!]!
}

input WorkdayCreateInput {
  title: String
  date: String!
}

input WorkdayUpdateInput {
  title: String
  date: String
}
